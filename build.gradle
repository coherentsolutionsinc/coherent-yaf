plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.quiltmc.gradle.licenser' version '2.0.1'
}

group = 'com.coherentsolutions.yaf'
version = '1.3.7-SNAPSHOT'

apply from: rootProject.file('versions.gradle')
def ep = [':yaf-docs', ':modules']

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    apply from: rootProject.file('spring.gradle')
    apply from: rootProject.file('publish.gradle')
    apply from: rootProject.file('license.gradle')

    repositories {
        mavenCentral()
    }

    version = rootProject.version


    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        implementation 'org.springframework.boot:spring-boot-starter'
    }
    def excludedProjects = ep;
    tasks.jar {
        enabled = !(project.name in excludedProjects)
        // Remove `plain` postfix from jar file name
        archiveClassifier.set("")
    }
}

tasks.register('allJavaDoc', Javadoc) {
    def includedProjects = subprojects.findAll { !ep.contains(it.path) }

    source includedProjects.collect { it.sourceSets.main.allJava }
    classpath = files(includedProjects.collect { it.sourceSets.main.compileClasspath })
    options.memberLevel = JavadocMemberLevel.PRIVATE
    destinationDir = project(':yaf-docs').file("docs/javadoc")

    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

tasks.register('generateAllDocs') {
    dependsOn(
            project(':yaf-docs').tasks.named('asciidoctor'),
            project(':yaf-docs').tasks.named('asciidoctorPdf'),
            tasks.named('allJavaDoc')
    )
    group = 'publishing'
    description = 'Publishes all documentation to GitHub Pages'
}

task printVersion {
    doLast {
        println project.version
    }
}
